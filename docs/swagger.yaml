basePath: /
definitions:
  api.ErrorResponse:
    properties:
      details:
        type: string
      error_message:
        type: string
    type: object
  api.NetworkInfo:
    properties:
      ip:
        type: string
      port:
        type: integer
    type: object
  api.RegisterServiceRequest:
    properties:
      command_args:
        items:
          type: string
        type: array
      command_name:
        type: string
      execute_directory:
        type: string
      service_name:
        type: string
    required:
    - command_name
    - service_name
    type: object
  api.ServiceData:
    properties:
      cmd:
        $ref: '#/definitions/manager.Command'
      execute_directory:
        type: string
      id:
        type: string
      is_running:
        type: boolean
      name:
        type: string
    type: object
  api.ServiceIDRequest:
    properties:
      service_id:
        type: string
    type: object
  api.ServiceMetrics:
    properties:
      cpu_percent:
        type: number
      ram_usage:
        type: number
      uptime:
        type: integer
    type: object
  api.StreamEvent:
    enum:
    - event_initial
    - event_append
    - event_error
    type: string
    x-enum-varnames:
    - EVENT_INITIAL
    - EVENT_APPEND
    - EVENT_ERROR
  api.StreamMessage:
    properties:
      data: {}
      type:
        $ref: '#/definitions/api.StreamEvent'
    type: object
  manager.Command:
    properties:
      args:
        description: Arguments is the arguments of the command
        items:
          type: string
        type: array
      name:
        description: Name is the name of the executable/binary
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: An API for managing and monitoring background services.
  title: Service Manager API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - health
  /manager/metrics:
    post:
      consumes:
      - application/json
      description: Get the metrics such as cpu percentage, ram usage and uptime.
      parameters:
      - description: Service ID
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/api.ServiceIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ServiceMetrics'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get metrics of an service
      tags:
      - manager
  /manager/network:
    post:
      consumes:
      - application/json
      description: Return info like ip address, port. May expand in the future
      parameters:
      - description: Service ID
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/api.ServiceIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.NetworkInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get network information of a service
      tags:
      - manager
  /manager/register:
    post:
      consumes:
      - application/json
      description: Registers a new service with the service manager.
      parameters:
      - description: Service Registration
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/api.RegisterServiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Register a new service
      tags:
      - manager
  /manager/remove:
    delete:
      consumes:
      - application/json
      description: Removes a service from the service manager.
      parameters:
      - description: Service ID
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/api.ServiceIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Remove a service
      tags:
      - manager
  /manager/services:
    get:
      description: Retrieves a list of all registered services and their statuses.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ServiceData'
            type: array
      summary: Get all services
      tags:
      - manager
  /manager/start:
    post:
      consumes:
      - application/json
      description: Starts a registered service.
      parameters:
      - description: Service ID
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/api.ServiceIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Start a service
      tags:
      - manager
  /manager/stop:
    post:
      consumes:
      - application/json
      description: Stops a running service.
      parameters:
      - description: Service ID
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/api.ServiceIDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Stop a service
      tags:
      - manager
  /stream/stderr/{serviceID}:
    get:
      description: Streams the standard error log of a service using Server-Sent Events
        (SSE).
      parameters:
      - description: Service ID
        in: path
        name: serviceID
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE stream of log data
          schema:
            $ref: '#/definitions/api.StreamMessage'
      summary: Stream service stderr logs
      tags:
      - stream
  /stream/stdout/{serviceID}:
    get:
      description: Streams the standard output log of a service using Server-Sent
        Events (SSE).
      parameters:
      - description: Service ID
        in: path
        name: serviceID
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE stream of log data
          schema:
            $ref: '#/definitions/api.StreamMessage'
      summary: Stream service stdout logs
      tags:
      - stream
swagger: "2.0"
